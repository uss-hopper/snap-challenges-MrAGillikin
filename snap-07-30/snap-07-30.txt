/**
 * gets the Tweet by tweetDate
 *
 * @param \PDO $pdo PDO connection object
 * @param Uuid|string $tweetId tweet id to search for
 * @return Tweet|null Tweet found or null if not found
 * @throws \PDOException when mySQL related errors occur
 * @throws \TypeError when a variable are not the correct data type
 **/

public function getTweetsByTweetDate (\PDO $pdo, DateTime $tweetDate) {
	try {
   			$tweetDate = self::validateDateTime($tweetDate);
   		} catch(\InvalidArgumentException | \RangeException $exception) {
   			$exceptionType = get_class($exception);
   			throw(new $exceptionType($exception->getMessage(), 0, $exception));
   		}
   		// create query template
   		$query = "SELECT tweetId, tweetProfileId, tweetContent, tweetDate FROM tweet WHERE tweetDate = :tweetDate";
   		$statement = $pdo->prepare($query);
   // bind the tweet id to the place holder in the template
  		$parameters = ["tweetId" => $tweetId->getBytes()];
  		$statement->execute($parameters);

  		// grab the tweet from mySQL
 		try {
 			$tweet = null;
			$statement->setFetchMode(\PDO::FETCH_ASSOC);
 			$row = $statement->fetch();
  			if($row !== false) {
 				$tweet = new Tweet($row["tweetId"], $row["tweetProfileId"], $row["tweetContent"], $row["tweetDate"]);
 			}
 		} catch(\Exception $exception) {
  			// if the row couldn't be converted, rethrow it
 			throw(new \PDOException($exception->getMessage(), 0, $exception));
  		}
		return($tweet);
}